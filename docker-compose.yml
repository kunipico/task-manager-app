services:
  db: 
    container_name: db
    image: mysql
    restart: always
    tty: true
    environment:
      MYSQL_DATABASE: TaskManager
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql#MYSQL123
      MYSQL_ROOT_PASSWORD: password
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - task-manager-network
    ports: 
      - 3306:3306
    # command: --port 3306
    volumes: 
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/log/mysql:/var/log/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysql -h 127.0.0.1 -u root -p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  
  backend:
    container_name: go-api
    build:
      context: backend
      dockerfile: Dockerfile
      args:
        - target=develop # デフォルトはローカル用ホットリロード環境
    volumes:
      - ./backend/:/api/src
    tty: true
    stdin_open: true
    ports:
      - "8080:8080"
    networks:
      - task-manager-network
    depends_on:
      db:
        condition: service_healthy
        restart: true

  
  frontend:
    container_name: next-app
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    image: next-app
    tty: true
    stdin_open: true
    ports:
      - 3000:3000
    networks:
      - task-manager-network
    volumes:
      - ./frontend/task-manager-app/:/my-app
      - node_modules:/my-app/node_modules
    environment:
     - WATCHPACK_POLLING=true
    # 以下のコマンドで開発環境として起動する。
    command: "npm run dev"

volumes:
  node_modules:

networks:
  task-manager-network:
    driver: bridge